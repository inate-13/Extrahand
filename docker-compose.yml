version: "2"
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
#        - 7000:7000

  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    hostname: localhost
    network_mode: host
    ports:
      - 3306:3306
    #    cap_add:
    #      - SYS_NICE
    environment:
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_USERNAME: extrahand
      MYSQL_PASSWORD: root
      MYSQL_ALLOW_EMPTY_PASSWORD: "YES"


  mongodb:
    image: mongo:latest
    container_name: mongo-container
    network_mode: host
    hostname: localhost
    ports:
      - 27017:27017

  neo4j:
    image: neo4j:4.2.3
    container_name: neo4j
    restart: always
    network_mode: host
    ports:
      - 7474:7474
      - 7687:7687
    environment:
      NEO4J_AUTH: neo4j/password

  prometheus:
    container_name: prom
    image: prom/prometheus
    restart: always
    network_mode: "host"
    hostname: localhost
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090

  grafana:
    container_name: graf
    image: grafana/grafana
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 3000:3000




  eureka-server:
    build: eureka-server/
    container_name: eureka-server
    restart: always
    network_mode: host
    hostname: localhost
    ports:
      - 8761:8761

  api-gateway:
    build: api-gateway/
    container_name: api-gateway
    depends_on:
      - eureka-server
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8080:8080

  product-webapp:
    build: product-webapp/
    image: product-webapp
    restart: always
    container_name: product-webapp
    network_mode: host
    hostname: localhost
    ports:
      - 4200:4200


#########################################################################################################
#  using realtime
  user-login-service:
    image: login_service_image
    container_name: login_container
    build: user-login-service/
    restart: always
    network_mode: host
    ports:
      - 7006:7006

  application-register-service:
    build: user-registration-service/
    container_name: application-register-service
    network_mode: "host"
    hostname: localhost
    restart: always
    ports:
      - 7007:7007


#  authentication-service:
#    build: userAuthentication/
#    container_name: authentication-service
#    depends_on:
#      - mysql
#      - eureka-server
#    network_mode: host
#    hostname: localhost
#    restart: always
#    ports:
#      - 8099:8099


  chat-service:
    image: chatserviceimage
    build: chat-service/
    container_name: chatroom-service
    restart: always
    hostname: localhost
    network_mode: host
    ports:
      - 7020:7020

  complaint-service:
    image: complaint_service_image
    build: complaint-service/
    container_name: complaint-service
    restart: always
    hostname: localhost
    network_mode: host
    ports:
      - 7001:7001

  email-service:
    image: emailservice
    build: email-service/
    container_name: email-service
    restart: always
    hostname: localhost
    network_mode: host
    ports:
      - 7002:7002

  feedback-service:
    image: feedbackservice
    build: feedback-service/
    container_name: feedback-service
    restart: always
    hostname: localhost
    network_mode: host
    ports:
      - 7003:7003

  payment-service:
    image: paymentservice
    build: Payment/
    container_name: payment-service
    restart: always
    hostname: localhost
    network_mode: host
    ports:
      - 7004:7004

  service-provided-service:
    image: service_provided
    build:  services-provides-services/
    container_name: service-provided-service
    restart: always
    hostname: localhost
    network_mode: host
    ports:
      - 7005:7005

  vendor-suggestion-service:
    image: vendor-suggestion
    build: vendor-suggestion-service/
    container_name: vendor-suggestion
    restart: always
    hostname: localhost
    network_mode: host
    ports:
      - 7008:7008

  location-service:
    image: location
    build: location/
    container_name: location
    restart: always
    hostname: localhost
    network_mode: host
    ports:
      - 7022:7022


  blog-service:
    image: blogservice
    build: blogs/
    container_name: blog-service
    restart: always
    hostname: localhost
    network_mode: host
    ports:
      - 7778:7778

  appointment-backend-service:
    image: appointment
    build: appointments-backend/
    container_name: appointment-service
    restart: always
    hostname: localhost
    network_mode: host
    ports:
      - 7021:7021
